package view.ultilities;

import view.login.Login;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import model.beans.Grade;
import model.beans.Student;
import model.beans.Teacher;
import model.beans.TeachingAssignment;
import service.Service;
import service.TeacherService;

/**
 *
 * @author nguye
 */
public class GradeManagement extends javax.swing.JDialog {

    private final DefaultMutableTreeNode rootClass;
    private final DefaultTreeModel modelTreeClass;
    private final Service service;
    private final TeacherService teacherService;
    private final Teacher teacherObj;
    private List<TeachingAssignment> listTeachingAssignments;
    private final TreeMap<String, TeachingAssignment> mapClass;
    private List<Student> listStudent;
    private final TreeMap<String, Student> mapStudent;
    private final TreeMap<String, Grade> mapGrade;
    private int studentIDNow;
    private int subjectDetailIDNow;
    private Student student;

    /**
     * Creates new form GradeManagement
     */
    public GradeManagement(java.awt.Frame parent, boolean modal, String username) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                Login.load.dispose();
            }
        });
        
        // service
        service = new Service();
        teacherService = new TeacherService();
        
        teacherObj = teacherService.createTeacherObj(username);
        
        // root
        rootClass = new DefaultMutableTreeNode("Class");
        modelTreeClass = new DefaultTreeModel(rootClass);
        jtreeClass.setModel(modelTreeClass);
        
        // Class
        listTeachingAssignments = service.getTeachingAssignments(teacherObj.getTeacherID());
        mapClass = new TreeMap<>();
        mapStudent = new TreeMap<>();
        mapGrade = new TreeMap<>();
        
        for (TeachingAssignment o : listTeachingAssignments) {
            mapClass.put(service.getClassname(o.getTeachingAssignmentID()), o);
        }
        for (Map.Entry<String, TeachingAssignment> entry : mapClass.entrySet()) {
            DefaultMutableTreeNode def = new DefaultMutableTreeNode(entry.getKey());
            rootClass.add(def);
            
            listStudent = service.getStudentParticipations(entry.getValue().getTeachingAssignmentID(), 1);
            for (Student o : listStudent) {
                mapStudent.put(o.getStudentName(), o);
                Grade grade = service.getGradeForSubjectID(entry.getValue().getSubjectID(), o.getStudentID());
                mapGrade.put(o.getStudentName(), grade);
                def.add(new DefaultMutableTreeNode(o.getStudentName()));
            }
            
        }
        
        
        initTreeClass();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jtreeClass = new javax.swing.JTree();
        Info = new javax.swing.JPanel();
        panelTittle = new javax.swing.JPanel();
        lblTittle = new javax.swing.JLabel();
        panelPhoto = new javax.swing.JPanel();
        lblPhoto = new javax.swing.JLabel();
        StudentName = new javax.swing.JLabel();
        StudentID = new javax.swing.JLabel();
        Grade = new javax.swing.JPanel();
        panelLab1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtLab1 = new javax.swing.JTextField();
        panelLab2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtLab2 = new javax.swing.JTextField();
        panelLab3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtLab3 = new javax.swing.JTextField();
        panelLab4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtLab4 = new javax.swing.JTextField();
        panelLab5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtLab5 = new javax.swing.JTextField();
        panelLab6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtLab6 = new javax.swing.JTextField();
        panelLab7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtLab7 = new javax.swing.JTextField();
        panelLab8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtLab8 = new javax.swing.JTextField();
        panelQuiz1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtQuiz1 = new javax.swing.JTextField();
        panelQuiz2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtQuiz2 = new javax.swing.JTextField();
        panelQuiz3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtQuiz3 = new javax.swing.JTextField();
        panelQuiz4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtQuiz4 = new javax.swing.JTextField();
        panelQuiz5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtQuiz5 = new javax.swing.JTextField();
        panelQuiz6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtQuiz6 = new javax.swing.JTextField();
        panelQuiz7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtQuiz7 = new javax.swing.JTextField();
        panelQuiz8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtQuiz8 = new javax.swing.JTextField();
        panelAsm1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtAsm1 = new javax.swing.JTextField();
        panelAsm2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtAsm2 = new javax.swing.JTextField();
        panelAsmFinal = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtAsmFinal = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jtreeClass.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jtreeClass.setAutoscrolls(true);
        jtreeClass.setMaximumSize(new java.awt.Dimension(200, 16));
        jtreeClass.setPreferredSize(new java.awt.Dimension(230, 16));
        jtreeClass.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jtreeClassValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jtreeClass);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        Info.setLayout(new java.awt.GridBagLayout());

        panelTittle.setLayout(new java.awt.GridBagLayout());

        lblTittle.setText("Xin chào </Tên sinh viên>");
        panelTittle.add(lblTittle, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        Info.add(panelTittle, gridBagConstraints);

        panelPhoto.setMinimumSize(new java.awt.Dimension(120, 120));
        panelPhoto.setPreferredSize(new java.awt.Dimension(120, 120));
        panelPhoto.setLayout(new java.awt.GridBagLayout());

        lblPhoto.setText("NOTHING");
        lblPhoto.setMinimumSize(new java.awt.Dimension(120, 120));
        panelPhoto.add(lblPhoto, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        Info.add(panelPhoto, gridBagConstraints);

        StudentName.setText("no name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        Info.add(StudentName, gridBagConstraints);

        StudentID.setText("id ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        Info.add(StudentID, gridBagConstraints);

        Grade.setLayout(new java.awt.GridBagLayout());

        panelLab1.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Lab 1");
        panelLab1.add(jLabel1, java.awt.BorderLayout.NORTH);

        txtLab1.setColumns(8);
        panelLab1.add(txtLab1, java.awt.BorderLayout.CENTER);

        Grade.add(panelLab1, new java.awt.GridBagConstraints());

        panelLab2.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("Lab 2");
        panelLab2.add(jLabel2, java.awt.BorderLayout.NORTH);

        txtLab2.setColumns(8);
        panelLab2.add(txtLab2, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        Grade.add(panelLab2, gridBagConstraints);

        panelLab3.setLayout(new java.awt.BorderLayout());

        jLabel3.setText("Lab 3");
        panelLab3.add(jLabel3, java.awt.BorderLayout.NORTH);

        txtLab3.setColumns(8);
        panelLab3.add(txtLab3, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        Grade.add(panelLab3, gridBagConstraints);

        panelLab4.setLayout(new java.awt.BorderLayout());

        jLabel4.setText("Lab 4");
        panelLab4.add(jLabel4, java.awt.BorderLayout.NORTH);

        txtLab4.setColumns(8);
        panelLab4.add(txtLab4, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        Grade.add(panelLab4, gridBagConstraints);

        panelLab5.setLayout(new java.awt.BorderLayout());

        jLabel5.setText("Lab 5");
        panelLab5.add(jLabel5, java.awt.BorderLayout.NORTH);

        txtLab5.setColumns(8);
        panelLab5.add(txtLab5, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        Grade.add(panelLab5, gridBagConstraints);

        panelLab6.setLayout(new java.awt.BorderLayout());

        jLabel6.setText("Lab 6");
        panelLab6.add(jLabel6, java.awt.BorderLayout.NORTH);

        txtLab6.setColumns(8);
        panelLab6.add(txtLab6, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        Grade.add(panelLab6, gridBagConstraints);

        panelLab7.setLayout(new java.awt.BorderLayout());

        jLabel7.setText("Lab 7");
        panelLab7.add(jLabel7, java.awt.BorderLayout.NORTH);

        txtLab7.setColumns(8);
        panelLab7.add(txtLab7, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        Grade.add(panelLab7, gridBagConstraints);

        panelLab8.setLayout(new java.awt.BorderLayout());

        jLabel8.setText("Lab 8");
        panelLab8.add(jLabel8, java.awt.BorderLayout.NORTH);

        txtLab8.setColumns(8);
        panelLab8.add(txtLab8, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        Grade.add(panelLab8, gridBagConstraints);

        panelQuiz1.setLayout(new java.awt.BorderLayout());

        jLabel9.setText("Quiz 1");
        panelQuiz1.add(jLabel9, java.awt.BorderLayout.NORTH);

        txtQuiz1.setColumns(8);
        panelQuiz1.add(txtQuiz1, java.awt.BorderLayout.CENTER);

        Grade.add(panelQuiz1, new java.awt.GridBagConstraints());

        panelQuiz2.setLayout(new java.awt.BorderLayout());

        jLabel10.setText("Quiz 2");
        panelQuiz2.add(jLabel10, java.awt.BorderLayout.NORTH);

        txtQuiz2.setColumns(8);
        panelQuiz2.add(txtQuiz2, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        Grade.add(panelQuiz2, gridBagConstraints);

        panelQuiz3.setLayout(new java.awt.BorderLayout());

        jLabel11.setText("Quiz 3");
        panelQuiz3.add(jLabel11, java.awt.BorderLayout.NORTH);

        txtQuiz3.setColumns(8);
        panelQuiz3.add(txtQuiz3, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        Grade.add(panelQuiz3, gridBagConstraints);

        panelQuiz4.setLayout(new java.awt.BorderLayout());

        jLabel12.setText("Quiz 4");
        panelQuiz4.add(jLabel12, java.awt.BorderLayout.NORTH);

        txtQuiz4.setColumns(8);
        panelQuiz4.add(txtQuiz4, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        Grade.add(panelQuiz4, gridBagConstraints);

        panelQuiz5.setLayout(new java.awt.BorderLayout());

        jLabel13.setText("Quiz 5");
        panelQuiz5.add(jLabel13, java.awt.BorderLayout.NORTH);

        txtQuiz5.setColumns(8);
        panelQuiz5.add(txtQuiz5, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        Grade.add(panelQuiz5, gridBagConstraints);

        panelQuiz6.setLayout(new java.awt.BorderLayout());

        jLabel14.setText("Quiz 6");
        panelQuiz6.add(jLabel14, java.awt.BorderLayout.NORTH);

        txtQuiz6.setColumns(8);
        panelQuiz6.add(txtQuiz6, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        Grade.add(panelQuiz6, gridBagConstraints);

        panelQuiz7.setLayout(new java.awt.BorderLayout());

        jLabel15.setText("Quiz 7");
        panelQuiz7.add(jLabel15, java.awt.BorderLayout.NORTH);

        txtQuiz7.setColumns(8);
        panelQuiz7.add(txtQuiz7, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        Grade.add(panelQuiz7, gridBagConstraints);

        panelQuiz8.setLayout(new java.awt.BorderLayout());

        jLabel16.setText("Quiz 8");
        panelQuiz8.add(jLabel16, java.awt.BorderLayout.NORTH);

        txtQuiz8.setColumns(8);
        panelQuiz8.add(txtQuiz8, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        Grade.add(panelQuiz8, gridBagConstraints);

        panelAsm1.setLayout(new java.awt.BorderLayout());

        jLabel17.setText("Assignment 1");
        panelAsm1.add(jLabel17, java.awt.BorderLayout.NORTH);

        txtAsm1.setColumns(8);
        panelAsm1.add(txtAsm1, java.awt.BorderLayout.CENTER);

        Grade.add(panelAsm1, new java.awt.GridBagConstraints());

        panelAsm2.setLayout(new java.awt.BorderLayout());

        jLabel18.setText("Assignment 2");
        panelAsm2.add(jLabel18, java.awt.BorderLayout.NORTH);

        txtAsm2.setColumns(8);
        panelAsm2.add(txtAsm2, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        Grade.add(panelAsm2, gridBagConstraints);

        panelAsmFinal.setLayout(new java.awt.BorderLayout());

        jLabel19.setText("Final");
        panelAsmFinal.add(jLabel19, java.awt.BorderLayout.NORTH);

        txtAsmFinal.setColumns(8);
        panelAsmFinal.add(txtAsmFinal, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        Grade.add(panelAsmFinal, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        Info.add(Grade, gridBagConstraints);

        btnSubmit.setText("Save");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        Info.add(btnSubmit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(Info, gridBagConstraints);

        setBounds(0, 0, 793, 546);
    }// </editor-fold>//GEN-END:initComponents

    private void jtreeClassValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jtreeClassValueChanged
        // TODO add your handling code here:
        TreePath path = evt.getPath();
        if(path.getPathCount() == 3) {
            TeachingAssignment teachingAssignment = mapClass.get(path.toString().split(",")[1].trim());
            student = mapStudent.get(path.getLastPathComponent().toString());
            displayInfoStudent(student, teachingAssignment);
            displayGrade(student);
            subjectDetailIDNow = teachingAssignment.getSubjectID();
            studentIDNow = student.getStudentID();
        }
    }//GEN-LAST:event_jtreeClassValueChanged

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        enterGrade();
    }//GEN-LAST:event_btnSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GradeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GradeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GradeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GradeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GradeManagement dialog = new GradeManagement(new javax.swing.JFrame(), true, "anph002@fpt.edu.vn");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Grade;
    private javax.swing.JPanel Info;
    private javax.swing.JLabel StudentID;
    private javax.swing.JLabel StudentName;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jtreeClass;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblTittle;
    private javax.swing.JPanel panelAsm1;
    private javax.swing.JPanel panelAsm2;
    private javax.swing.JPanel panelAsmFinal;
    private javax.swing.JPanel panelLab1;
    private javax.swing.JPanel panelLab2;
    private javax.swing.JPanel panelLab3;
    private javax.swing.JPanel panelLab4;
    private javax.swing.JPanel panelLab5;
    private javax.swing.JPanel panelLab6;
    private javax.swing.JPanel panelLab7;
    private javax.swing.JPanel panelLab8;
    private javax.swing.JPanel panelPhoto;
    private javax.swing.JPanel panelQuiz1;
    private javax.swing.JPanel panelQuiz2;
    private javax.swing.JPanel panelQuiz3;
    private javax.swing.JPanel panelQuiz4;
    private javax.swing.JPanel panelQuiz5;
    private javax.swing.JPanel panelQuiz6;
    private javax.swing.JPanel panelQuiz7;
    private javax.swing.JPanel panelQuiz8;
    private javax.swing.JPanel panelTittle;
    private javax.swing.JTextField txtAsm1;
    private javax.swing.JTextField txtAsm2;
    private javax.swing.JTextField txtAsmFinal;
    private javax.swing.JTextField txtLab1;
    private javax.swing.JTextField txtLab2;
    private javax.swing.JTextField txtLab3;
    private javax.swing.JTextField txtLab4;
    private javax.swing.JTextField txtLab5;
    private javax.swing.JTextField txtLab6;
    private javax.swing.JTextField txtLab7;
    private javax.swing.JTextField txtLab8;
    private javax.swing.JTextField txtQuiz1;
    private javax.swing.JTextField txtQuiz2;
    private javax.swing.JTextField txtQuiz3;
    private javax.swing.JTextField txtQuiz4;
    private javax.swing.JTextField txtQuiz5;
    private javax.swing.JTextField txtQuiz6;
    private javax.swing.JTextField txtQuiz7;
    private javax.swing.JTextField txtQuiz8;
    // End of variables declaration//GEN-END:variables

    private void initTreeClass() {
        
    }

    private void displayInfoStudent(Student temp, TeachingAssignment teachingAssignment) {
        lblTittle.setText("Xin chào " + temp.getStudentName());
        byte[] data = temp.getPhoto();
        if(data != null) {
            try (ByteArrayInputStream bin = new ByteArrayInputStream(data)) {
                Image img = ImageIO.read(bin);
                if(img != null) {
                    lblPhoto.setIcon(new ImageIcon(img.getScaledInstance(120, 120, Image.SCALE_SMOOTH)));
                }
            } catch (IOException e) {
                System.out.println(e);
            }
        } else {
            lblPhoto.setText("NOTHING");
        }
        
        StudentName.setText(temp.getStudentName());
        StudentID.setText(getMSSV(temp.getStudentID()));
        
    }
    
    private String getMSSV(int StudentID) {
        String defaultStr = "00000" + StudentID;
        String res = "PH" + defaultStr.substring(defaultStr.length() - 5, defaultStr.length());
        return res.toUpperCase();
    }

    private void displayGrade(Student student) {
        String studentName = student.getStudentName();
        Grade o = mapGrade.get(studentName);
        txtLab1.setText(o.getLab1()+"");
        txtLab2.setText(o.getLab2()+"");
        txtLab3.setText(o.getLab3()+"");
        txtLab4.setText(o.getLab4()+"");
        txtLab5.setText(o.getLab5()+"");
        txtLab6.setText(o.getLab6()+"");
        txtLab7.setText(o.getLab7()+"");
        txtLab8.setText(o.getLab8()+"");
        
        txtQuiz1.setText(o.getQuiz1() +"");
        txtQuiz2.setText(o.getQuiz2() +"");
        txtQuiz3.setText(o.getQuiz3() +"");
        txtQuiz4.setText(o.getQuiz4() +"");
        txtQuiz5.setText(o.getQuiz5() +"");
        txtQuiz6.setText(o.getQuiz6() +"");
        txtQuiz7.setText(o.getQuiz7() +"");
        txtQuiz8.setText(o.getQuiz8() +"");

        txtAsm1.setText(o.getAssignment1()+"");
        txtAsm2.setText(o.getAssignment2()+"");
        txtAsmFinal.setText(o.getAssignmentfinal()+"");
    }
    
    
    private boolean enterGrade() {
        try {
            double lab1 = Double.parseDouble(txtLab1.getText());
            double lab2 = Double.parseDouble(txtLab2.getText());
            double lab3 = Double.parseDouble(txtLab3.getText());
            double lab4 = Double.parseDouble(txtLab4.getText());
            double lab5 = Double.parseDouble(txtLab5.getText());
            double lab6 = Double.parseDouble(txtLab6.getText());
            double lab7 = Double.parseDouble(txtLab7.getText());
            double lab8 = Double.parseDouble(txtLab8.getText());
            double quiz1 = Double.parseDouble(txtQuiz1.getText());
            double quiz2 = Double.parseDouble(txtQuiz2.getText());
            double quiz3 = Double.parseDouble(txtQuiz3.getText());
            double quiz4 = Double.parseDouble(txtQuiz4.getText());
            double quiz5 = Double.parseDouble(txtQuiz5.getText());
            double quiz6 = Double.parseDouble(txtQuiz6.getText());
            double quiz7 = Double.parseDouble(txtQuiz7.getText());
            double quiz8 = Double.parseDouble(txtQuiz8.getText());
            double assignment1 = Double.parseDouble(txtAsm1.getText());
            double assignment2 = Double.parseDouble(txtAsm2.getText());
            double finalAssignment = Double.parseDouble(txtAsmFinal.getText());
            if (
                    lab1 >= 0 && lab1 <= 10
                    && lab2 >= 0 && lab2 <= 10
                    && lab3 >= 0 && lab3 <= 10
                    && lab4 >= 0 && lab4 <= 10
                    && lab5 >= 0 && lab5 <= 10
                    && lab6 >= 0 && lab6 <= 10
                    && lab7 >= 0 && lab7 <= 10
                    && lab8 >= 0 && lab8 <= 10
                    && quiz1 >= 0 && quiz1 <= 10
                    && quiz2 >= 0 && quiz2 <= 10
                    && quiz3 >= 0 && quiz3 <= 10
                    && quiz4 >= 0 && quiz4 <= 10
                    && quiz5 >= 0 && quiz5 <= 10
                    && quiz6 >= 0 && quiz6 <= 10
                    && quiz7 >= 0 && quiz7 <= 10
                    && quiz8 >= 0 && quiz8 <= 10
                    && assignment1 >= 0 && assignment1 <= 10
                    && assignment2 >= 0 && assignment2 <= 10
                    && finalAssignment >= 0 && finalAssignment <= 10) 
            {
                
                Grade grade = new Grade(lab1, lab2, lab3, lab4, lab5, lab6, lab7, lab8, quiz1, quiz2, quiz3, quiz4, quiz5, quiz6, quiz7, quiz8, assignment1, assignment2, finalAssignment);
                if(service.updateMark(grade, subjectDetailIDNow, studentIDNow)) {
                    JOptionPane.showMessageDialog(this, "Nhập điểm thành công", "Xác nhận", JOptionPane.DEFAULT_OPTION);
                    
                    mapGrade.computeIfPresent(student.getStudentName(), (key, currentGrade) -> {
                        return grade;
                    });
                    displayGrade(student);
                    return true;
                } else {
                    JOptionPane.showMessageDialog(this, "Nhập điểm thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Điểm phải trong khoảng 0 ->10", "Cảnh báo", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui Lòng nhập số", "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

   
}
