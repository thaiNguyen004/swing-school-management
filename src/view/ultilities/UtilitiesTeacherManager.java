package view.ultilities;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.RenderedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.beans.Teacher;
import service.Service;
import service.TeacherService;

/**
 *
 * @author nguye
 */
public class UtilitiesTeacherManager extends javax.swing.JDialog {

    private JFileChooser fileChooser;
    private byte[] data;
    private TeacherService teacherService;
    private List<Teacher> listTeacher;
    private TreeMap<String, Integer> mapMSGV;
    private JLabel[] listSearch;
    private final Service service;
    private Teacher teacher;
    private Map<String, Integer> majorMap;
    private final TeacherManagement teacherFrame;

    /**
     * Creates new form UtilitiesTeacherManager
     */
    public UtilitiesTeacherManager(JDialog parent, boolean modal) {
        super(parent, false);
        initComponents();
        setLocationRelativeTo(parent);

        teacherFrame = new TeacherManagement();
        
        service = new Service();
        listSearch = new JLabel[]{lblRange1, lblRange2, lblRange3, lblRange4, lblRange5};
        initMajor();

        
        getContentPane().setBackground(new Color(0x27ae60));
        jPanel1.setBackground(new Color(0x27ae60));
        jPanel3.setBackground(new Color(0x27ae60));
        jPanel4.setBackground(new Color(0x27ae60));
        jPanel5.setBackground(new Color(0x27ae60));
        jPanel6.setBackground(new Color(0x27ae60));
        jPanel7.setBackground(new Color(0x27ae60));
        jPanel8.setBackground(new Color(0x27ae60));
        jPanel9.setBackground(new Color(0x27ae60));
        jPanel10.setBackground(new Color(0x27ae60));
        jPanel11.setBackground(new Color(0x27ae60));
        jPanel12.setBackground(new Color(0x27ae60));
        designButton(btnSubmit, 0x8e44ad, 0xecf0f1, 2, 10, 2, 10);
        designButton(btnUpdate, 0x8e44ad, 0xecf0f1, 2, 10, 2, 10);
        designButton(btnDelete, 0x8e44ad, 0xecf0f1, 2, 10, 2, 10);

        teacherService = new TeacherService();

        initListTeacher();

        btnBrowser.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                data = initFileExplorer();
                initPhotoComp(data);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblPhoto = new javax.swing.JLabel();
        btnBrowser = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblTeacherID = new javax.swing.JLabel();
        txtTeacherID = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        lblDescriptor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescriptor = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        lblTeacherName = new javax.swing.JLabel();
        txtTeacherName = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        lblSex = new javax.swing.JLabel();
        cboSex = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        lblDob = new javax.swing.JLabel();
        txtDob = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        lblPhoneNumber = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        lblProvice = new javax.swing.JLabel();
        txtProvice = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        lblMajor = new javax.swing.JLabel();
        cboMajor = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        lblTeacherManager = new javax.swing.JLabel();
        txtTeacherManager = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel13 = new javax.swing.JPanel();
        lblRange1 = new javax.swing.JLabel();
        lblRange2 = new javax.swing.JLabel();
        lblRange3 = new javax.swing.JLabel();
        lblRange4 = new javax.swing.JLabel();
        lblRange5 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        lblSearch.setText("MSGV / TeacherID");
        jPanel1.add(lblSearch);

        txtSearch.setColumns(20);
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtSearch);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(26, 0, 0, 10);
        getContentPane().add(btnSubmit, gridBagConstraints);

        jLabel1.setText("Thông tin giảng viên");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jLabel1, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(255, 102, 102));
        jPanel2.setMinimumSize(new java.awt.Dimension(120, 120));
        jPanel2.setPreferredSize(new java.awt.Dimension(120, 120));
        jPanel2.setLayout(new java.awt.BorderLayout());

        lblPhoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhoto.setText("NOTHING");
        jPanel2.add(lblPhoto, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        getContentPane().add(jPanel2, gridBagConstraints);

        btnBrowser.setText("Browser");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(btnBrowser, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridLayout(2, 1));

        lblTeacherID.setText("Teacher ID");
        jPanel3.add(lblTeacherID);

        txtTeacherID.setEditable(false);
        txtTeacherID.setBackground(new java.awt.Color(41, 128, 185));
        txtTeacherID.setColumns(20);
        txtTeacherID.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtTeacherID.setForeground(new java.awt.Color(255, 255, 255));
        txtTeacherID.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jPanel3.add(txtTeacherID);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridLayout(2, 1));

        lblDescriptor.setText("Descriptor");
        jPanel4.add(lblDescriptor);

        txtDescriptor.setBackground(new java.awt.Color(41, 128, 185));
        txtDescriptor.setColumns(20);
        txtDescriptor.setFont(new java.awt.Font("Consolas", 1, 10)); // NOI18N
        txtDescriptor.setForeground(new java.awt.Color(255, 255, 255));
        txtDescriptor.setRows(5);
        jScrollPane2.setViewportView(txtDescriptor);

        jPanel4.add(jScrollPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridLayout(2, 1));

        lblTeacherName.setText("Teacher Name");
        jPanel5.add(lblTeacherName);

        txtTeacherName.setEditable(false);
        txtTeacherName.setBackground(new java.awt.Color(41, 128, 185));
        txtTeacherName.setColumns(20);
        txtTeacherName.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtTeacherName.setForeground(new java.awt.Color(255, 255, 255));
        txtTeacherName.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jPanel5.add(txtTeacherName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel5, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridLayout(2, 1));

        lblSex.setText("Sex");
        jPanel6.add(lblSex);

        cboSex.setBackground(new java.awt.Color(41, 128, 185));
        cboSex.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        cboSex.setForeground(new java.awt.Color(255, 255, 255));
        cboSex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));
        jPanel6.add(cboSex);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel6, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridLayout(2, 1));

        lblDob.setText("Date of Birth");
        jPanel7.add(lblDob);

        txtDob.setEditable(false);
        txtDob.setBackground(new java.awt.Color(41, 128, 185));
        txtDob.setColumns(20);
        txtDob.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtDob.setForeground(new java.awt.Color(255, 255, 255));
        txtDob.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jPanel7.add(txtDob);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel7, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridLayout(2, 1));

        lblEmail.setText("Email");
        jPanel8.add(lblEmail);

        txtEmail.setEditable(false);
        txtEmail.setBackground(new java.awt.Color(41, 128, 185));
        txtEmail.setColumns(20);
        txtEmail.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtEmail.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jPanel8.add(txtEmail);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel8, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridLayout(2, 1));

        lblPhoneNumber.setText("Phone number");
        jPanel9.add(lblPhoneNumber);

        txtPhoneNumber.setBackground(new java.awt.Color(41, 128, 185));
        txtPhoneNumber.setColumns(20);
        txtPhoneNumber.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtPhoneNumber.setForeground(new java.awt.Color(255, 255, 255));
        txtPhoneNumber.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jPanel9.add(txtPhoneNumber);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel9, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridLayout(2, 1));

        lblProvice.setText("Provice");
        jPanel10.add(lblProvice);

        txtProvice.setBackground(new java.awt.Color(41, 128, 185));
        txtProvice.setColumns(20);
        txtProvice.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtProvice.setForeground(new java.awt.Color(255, 255, 255));
        txtProvice.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jPanel10.add(txtProvice);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel10, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridLayout(2, 1));

        lblMajor.setText("Major");
        jPanel11.add(lblMajor);

        cboMajor.setBackground(new java.awt.Color(41, 128, 185));
        cboMajor.setForeground(new java.awt.Color(255, 255, 255));
        jPanel11.add(cboMajor);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel11, gridBagConstraints);

        jPanel12.setLayout(new java.awt.GridLayout(2, 1));

        lblTeacherManager.setText("TeacherManager");
        jPanel12.add(lblTeacherManager);

        txtTeacherManager.setEditable(false);
        txtTeacherManager.setBackground(new java.awt.Color(41, 128, 185));
        txtTeacherManager.setForeground(new java.awt.Color(255, 255, 255));
        txtTeacherManager.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jPanel12.add(txtTeacherManager);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel12, gridBagConstraints);

        jCheckBox1.setBackground(new java.awt.Color(39, 174, 96));
        jCheckBox1.setForeground(new java.awt.Color(236, 240, 241));
        jCheckBox1.setText("Trưởng môn ?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jCheckBox1, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridLayout(5, 1));

        lblRange1.setText(" ");
        lblRange1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRange1MouseClicked(evt);
            }
        });
        jPanel13.add(lblRange1);

        lblRange2.setText(" ");
        lblRange2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRange2MouseClicked(evt);
            }
        });
        jPanel13.add(lblRange2);

        lblRange3.setText(" ");
        lblRange3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRange3MouseClicked(evt);
            }
        });
        lblRange3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblRange3KeyPressed(evt);
            }
        });
        jPanel13.add(lblRange3);

        lblRange4.setText(" ");
        lblRange4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRange4MouseClicked(evt);
            }
        });
        jPanel13.add(lblRange4);

        lblRange5.setText(" ");
        lblRange5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRange5MouseClicked(evt);
            }
        });
        jPanel13.add(lblRange5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jPanel13, gridBagConstraints);

        btnUpdate.setText("Sửa giảng viên");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        getContentPane().add(btnUpdate, gridBagConstraints);

        btnDelete.setText("Xóa giảng viên");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        getContentPane().add(btnDelete, gridBagConstraints);

        setBounds(0, 0, 687, 581);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        lblRange1.setText(" ");
        lblRange2.setText(" ");
        lblRange3.setText(" ");
        lblRange4.setText(" ");
        lblRange5.setText(" ");
        if (txtSearch.getText().length() >= 2) {
            String res = txtSearch.getText().substring(0, 2);
            if (res.equalsIgnoreCase("fe")) {
                int index = 0;
                for (Map.Entry<String, Integer> entry : mapMSGV.entrySet()) {
                    res = txtSearch.getText().substring(2);
                    if (entry.getKey().indexOf(res) > 0 && index < 5) {
                        listSearch[index++].setText(entry.getKey());
                    }

                }
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void lblRange1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRange1MouseClicked
        // TODO add your handling code here:
        displayInfo(lblRange1);
    }//GEN-LAST:event_lblRange1MouseClicked

    private void lblRange2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRange2MouseClicked
        // TODO add your handling code here:
        displayInfo(lblRange2);
    }//GEN-LAST:event_lblRange2MouseClicked

    private void lblRange3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblRange3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblRange3KeyPressed

    private void lblRange3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRange3MouseClicked
        // TODO add your handling code here:
        displayInfo(lblRange3);
    }//GEN-LAST:event_lblRange3MouseClicked

    private void lblRange4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRange4MouseClicked
        // TODO add your handling code here:
        displayInfo(lblRange4);
    }//GEN-LAST:event_lblRange4MouseClicked

    private void lblRange5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRange5MouseClicked
        // TODO add your handling code here:
        displayInfo(lblRange5);
    }//GEN-LAST:event_lblRange5MouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        if (!lblRange1.getText().trim().isEmpty()) {
            displayInfo(lblRange1);
        }
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if (!lblRange1.getText().trim().isEmpty()) {
            displayInfo(lblRange1);
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (teacher != null) {

            String[] options = {"Xác nhận", "Hủy"};
            int indexOptions = JOptionPane.showOptionDialog(this, "Bạn có muốn xóa giáo viên này không?",
                    "Xác nhận xóa", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
            if (indexOptions == 0) {
                if (teacher.getTeacherManagerID() == 0) {
                    JOptionPane.showMessageDialog(this, "Bạn phải chuyển đổi trưởng môn đã! Xóa thất bại");
                } else {
                    
                    boolean isDeleted = teacherService.deleteTeacher(teacher.getTeacherID());
                    if (isDeleted) {
                        JOptionPane.showMessageDialog(this, "Đã xóa thành công");
                        teacherFrame.fillTeacherByClassID();
                        teacherFrame.fillTeacherByMajorID();
                        clearForm();
                    } else {
                        JOptionPane.showMessageDialog(this, "Xóa thất bại");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Đã hủy xóa");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Chưa có thông tin giáo viên cần xóa");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        if (teacher != null) {

            int teacherManagerID;
            if (jCheckBox1.isSelected()) {
                teacherManagerID = 0;
            } else {
                teacherManagerID = teacher.getTeacherManagerID();
            }

            Teacher o = new Teacher(
                    teacher.getTeacherID(),
                    ((cboSex.getSelectedIndex() == 0) ? 1 : 2),
                    txtPhoneNumber.getText(),
                    txtProvice.getText(),
                    majorMap.get((String) cboMajor.getSelectedItem()),
                    teacherManagerID,
                    data,
                    LocalDate.parse(LocalDate.now().toString(), format),
                    txtDescriptor.getText());

            if (teacherManagerID == 0) {
                String[] options = {"Xác nhận", "Hủy"};
                int indexOptions = JOptionPane.showOptionDialog(this, "Bạn có muốn thay đổi giáo viên này là trưởng môn không?",
                        "Xác nhận trưởng môn", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);

                confirmUpdate(indexOptions, o);
            } else {
                String[] options = {"Xác nhận", "Hủy"};
                int indexOptions = JOptionPane.showOptionDialog(this, "Bạn có muốn thay đổi giáo viên không?",
                        "Xác nhận cập nhật", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
                confirmUpdate(indexOptions, o);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Chưa có thông tin giáo viên cần cập nhật");
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void confirmUpdate(int state, Teacher o) {
        if (state == 0) {   
            boolean isUpdateSuccess = teacherService.updateTeacher(o);
            if (isUpdateSuccess) {
                JOptionPane.showMessageDialog(this, "Bạn đã cập nhật thành công");
                teacherFrame.fillTeacherByClassID();
                teacherFrame.fillTeacherByMajorID();
            } else {
                JOptionPane.showMessageDialog(this, "Bạn đã cập nhật thất bại");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Đã hủy cập nhật");
        }
    }

    private void clearForm() {
        txtSearch.setText("");
        lblRange1.setText(" ");
        lblRange2.setText(" ");
        lblRange3.setText(" ");
        lblRange4.setText(" ");
        lblRange5.setText(" ");
        txtTeacherID.setText("");
        txtTeacherName.setText("");
        txtEmail.setText("");
        txtDob.setText("");
        txtDescriptor.setText("");
        txtPhoneNumber.setText("");
        txtProvice.setText("");
        txtTeacherManager.setText("");
        cboMajor.setSelectedIndex(0);
        cboSex.setSelectedIndex(0);
        jCheckBox1.setSelected(false);
    }

    private void displayInfo(JLabel lblRange) {
        int teacherID = mapMSGV.get(lblRange.getText());
        teacher = teacherService.getTeacherByTeacherID(teacherID);
        if (teacher != null) {
            txtTeacherID.setText(getMSGV(teacher.getTeacherID()));
            txtTeacherName.setText(teacher.getTeacherName());
            if (teacher.getSex() == 1) {
                cboSex.setSelectedIndex(0);
            } else {
                cboSex.setSelectedIndex(1);
            }
            txtDob.setText(teacher.getDateOfBirth().toString());
            txtProvice.setText(teacher.getProvice());
            txtPhoneNumber.setText(teacher.getPhoneNumber());
            txtEmail.setText(teacher.getEmail());
            if (teacher.getTeacherManagerID() == 0) {
                jCheckBox1.setSelected(true);
                jCheckBox1.setEnabled(false);
                jCheckBox1.setBackground(new Color(0xffffff));
                cboMajor.setEnabled(false);
            } else {
                jCheckBox1.setEnabled(true);
                cboMajor.setEnabled(true);
                jCheckBox1.setBackground(new Color(0x27ae60));
                jCheckBox1.setSelected(false);
                Teacher o = teacherService.getTeacherByTeacherID(teacher.getTeacherManagerID());
                txtTeacherManager.setText(o.getTeacherName() + "- " + getMSGV(o.getTeacherID()));
            }
            txtDescriptor.setText(teacher.getDescriptor());
            String major = service.getMajorNameByMajorID(teacher.getMajorID());
            cboMajor.setSelectedItem(major);

            if (teacher.getData() != null) {
                try (ByteArrayInputStream bin = new ByteArrayInputStream(teacher.getData())) {
                    if (bin != null) {
                        Image img = ImageIO.read(bin);
                        if (img != null) {
                            lblPhoto.setIcon(new ImageIcon(img.getScaledInstance(120, 120, Image.SCALE_SMOOTH)));
                        }
                    }
                } catch (IOException e) {
                    System.out.println(e);
                }
            } else {
                lblPhoto.setIcon(new ImageIcon());
            }

        }
    }

    private void initMajor() {
        majorMap = service.getMajorMap();
        for (Map.Entry<String, Integer> entry : majorMap.entrySet()) {
            cboMajor.addItem(entry.getKey());
        }
    }

    /**
     * @param args the command line arguments
     */
    private void designButton(JButton originButton, int bgHex, int fgHex, int t, int r, int b, int l) {
        originButton.setFont(new Font("Consolas", Font.PLAIN, 14));
        originButton.setBackground(new Color(bgHex));
        originButton.setForeground(new Color(fgHex));
        originButton.setBorder(new EmptyBorder(t, l, b, r));
    }

    private byte[] initFileExplorer() {
        fileChooser = new JFileChooser();
        FileNameExtensionFilter filter
                = new FileNameExtensionFilter("Images",
                        "jpg",
                        "jpeg",
                        "png",
                        "gif");
        fileChooser.setFileFilter(filter);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                // Đọc dữ liệu từ tệp ảnh và chuyển thành mảng byte
                FileInputStream in = new FileInputStream(selectedFile);
                Image img = ImageIO.read(in);

                ByteArrayOutputStream bout = new ByteArrayOutputStream();
                ImageIO.write((RenderedImage) img, "png", bout);
                return bout.toByteArray();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return null;
    }

    private void initPhotoComp(byte[] data) {
        if (data != null) {
            try (ByteArrayInputStream bin = new ByteArrayInputStream(data)) {
                Image img = ImageIO.read(bin);
                if (img != null) {
                    lblPhoto.setIcon(
                            new ImageIcon(img.getScaledInstance(120, 120, Image.SCALE_SMOOTH)));
                }

            } catch (IOException e) {
                System.out.println(e);
            }

        } else {
            lblPhoto.setIcon(new ImageIcon());
        }

    }

    private void initListTeacher() {
        listTeacher = teacherService.getListTeacher();
        mapMSGV = new TreeMap<>();
        for (Teacher o : listTeacher) {
            mapMSGV.put(getMSGV(o.getTeacherID()), o.getTeacherID());
        }
    }

    private String getMSGV(int teacherID) {
        String defaultStr = "00000" + teacherID;
        String res = "FE" + defaultStr.substring(defaultStr.length() - 5, defaultStr.length());
        return res.toUpperCase();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UtilitiesTeacherManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UtilitiesTeacherManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UtilitiesTeacherManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UtilitiesTeacherManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UtilitiesTeacherManager dialog = new UtilitiesTeacherManager(new JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowser;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboMajor;
    private javax.swing.JComboBox<String> cboSex;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDescriptor;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblMajor;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblProvice;
    private javax.swing.JLabel lblRange1;
    private javax.swing.JLabel lblRange2;
    private javax.swing.JLabel lblRange3;
    private javax.swing.JLabel lblRange4;
    private javax.swing.JLabel lblRange5;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSex;
    private javax.swing.JLabel lblTeacherID;
    private javax.swing.JLabel lblTeacherManager;
    private javax.swing.JLabel lblTeacherName;
    private javax.swing.JTextArea txtDescriptor;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtProvice;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTeacherID;
    private javax.swing.JTextField txtTeacherManager;
    private javax.swing.JTextField txtTeacherName;
    // End of variables declaration//GEN-END:variables
}
